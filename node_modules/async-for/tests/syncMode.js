var _for = require ('../index').sync;
var should = require ('should');

describe ('sync mode should work the same as async mode', function () {

  it ('should end when the specified count is reached', function (done) {
    var last = -1;
    function assert (num) {
      last++;
      last.should.eql (num);
    }

    _for (10, function (i, _break, _continue) {
        last.should.not.eql (10);
        assert (i);
        setImmediate (_continue);
      }) (function () {
        last.should.eql (9);
        done ();
      });
  });

  it ('should end when the test condition is false', function (done) {
    var loop = _for (0,
      function (i) { return i < 10; },
      function (i) { return i + 1; },
      function (i, _break, _continue) {
        i.should.not.eql (10);
        _continue ();
      }) (done);
  });

  it ('should call the loop with the passed data', function (done) {
    var results = '';

    var loop = _for (
      0,
      function (i) { return i < 2; },
      function (i) { return i + 1; },
      function (i, _break, _continue, data) {
        if (data == 'c') return void _break (results + 'done');
        results = results + i + data;
        _continue ();
      });

    loop ('a', function () {
      loop ('b', function () {
        loop ('c', function (data) {
          data.should.eql ('0a1a0b1bdone');
          done ();
        });
      });
    });
  });

});

